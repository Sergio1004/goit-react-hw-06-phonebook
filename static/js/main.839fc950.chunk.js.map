{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","redux/contact/contact-actions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contact/contacts-reducer.js","redux/store.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","contactsActions","addContact","createAction","name","number","payload","id","uuid","deleteContact","changeFilter","ContactForm","useState","setName","setNumber","dispatch","useDispatch","contacts","useSelector","state","items","handleInputChange","e","currentTarget","value","reset","onSubmit","preventDefault","some","contact","alert","contactActions","className","s","contactForm","type","onChange","pattern","title","required","button","ContactList","filter","contactsList","toLowerCase","includes","filtersContacts","contactList","map","contactItem","contactName","contactNumber","contactButton","onClick","Filter","target","filterInput","App","createReducer","actions","combineReducers","contactsPersistConfig","key","storage","blacklist","rootReducer","persistReducer","contactsReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistedStore","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.839fc950.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__3VxuM\",\"contactForm\":\"ContactForm_contactForm__nThkI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__3J01r\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v1 as uuid } from 'uuid';\r\n\r\nconst addContact = createAction('contact/add', (name, number) => ({\r\n  payload: {\r\n    id: uuid(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\n\r\nconst changeFilter = createAction('phonebook/changeFilter');\r\n\r\nconst contactsActions = { addContact, deleteContact, changeFilter };\r\n\r\nexport default contactsActions;\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport contactActions from '../../redux/contact/contact-actions';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(state => state.contacts.items);\r\n\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (contacts.some(contact => contact.name === name)) {\r\n      alert(`${name} is already in contacts.`);\r\n    } else {\r\n      dispatch(contactActions.addContact(name, number));\r\n    }\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.contactForm}>\r\n      <div>\r\n        <h2>Name</h2>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleInputChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Number</h2>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleInputChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </div>\r\n      <button className={s.button}>Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport contactActions from '../../redux/contact/contact-actions';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nconst filtersContacts = (contacts, filter) => {\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n};\r\n\r\nfunction ContactList() {\r\n  const contacts = useSelector(state => state.contacts.items);\r\n  const filter = useSelector(state => state.contacts.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  const contactsList = filtersContacts(contacts, filter);\r\n\r\n  const deleteContact = id => {\r\n    dispatch(contactActions.deleteContact(id));\r\n  };\r\n\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contactsList.map(({ id, name, number }) => (\r\n        <li key={id} className={s.contactItem}>\r\n          <span className={s.contactName}>{name}</span>\r\n          <span className={s.contactNumber}>{number}</span>\r\n          <button\r\n            className={s.contactButton}\r\n            type=\"button\"\r\n            onClick={() => deleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","import { useDispatch } from 'react-redux';\r\n\r\nimport contactActions from '../../redux/contact/contact-actions';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter() {\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = e => {\r\n    dispatch(contactActions.changeFilter(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <label className={s.filter}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        onChange={onChange}\r\n        className={s.filterInput}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import './App.css';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <div className=\"countainer\">\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport actions from './contact-actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (state, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n","import { combineReducers } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nimport contactsReducer from './contact/contacts-reducer';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst persistedStore = { store, persistor };\r\n\r\nexport default persistedStore;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3ug12\",\"contactItem\":\"ContactList_contactItem__1UyXb\",\"contactName\":\"ContactList_contactName__2aQ0b\",\"contactNumber\":\"ContactList_contactNumber__2mfKC\",\"contactButton\":\"ContactList_contactButton__2lypV\"};"],"sourceRoot":""}